A realtime ~markdown~ and ~org-mode~ preview in Emacs.

[[./demo.gif][./demo.gif]]

* Table of Contents                                       :TOC_2_gh:QUOTE:noexport:
#+BEGIN_QUOTE
- [[#requirements][Requirements]]
  - [[#programs][Programs]]
  - [[#emacs-packages][Emacs Packages]]
- [[#installation][Installation]]
  - [[#with-use-package-and-straight][With ~use-package~ and ~straight~]]
  - [[#manual-installation][Manual installation]]
- [[#usage][Usage]]
- [[#customization][Customization]]
- [[#screenshots][Screenshots]]
  - [[#org-mode][Org-mode]]
  - [[#markdown-mode][Markdown-mode]]
#+END_QUOTE

* Requirements
** Programs
| Program | Version | Description                  |
|---------+---------+------------------------------|
| [[https://pandoc.org/installing.html][pandoc]]  | Latest  | Universal document converter |
| Emacs   | >=28.1  | Editor                       |

** Emacs Packages
| Package      | Version  | Description                     |
|--------------+----------+---------------------------------|
| [[https://github.com/skeeto/emacs-http-server][simple-httpd]] | >= 0.4.0 | A simple Emacs web server.      |
| [[https://github.com/ahyatt/emacs-websocket][websocket]]    | >= 1.14  | A library for websocket clients |

* Installation

** With ~use-package~ and ~straight~
#+begin_src elisp :eval no
(use-package org-markdown-preview
  :straight (:repo "KarimAziev/org-markdown-preview"
                   :type git
                   :host github
                   :files ("*.html" "*.el")))
#+end_src

** Manual installation

Download the source code and put it wherever you like, e.g. into =~/.emacs.d/org-markdown-preview/=

#+begin_src shell :eval no
git clone https://github.com/KarimAziev/org-markdown-preview.git ~/.emacs.d/org-markdown-preview/
#+end_src

Add the downloaded directory to the load path:

#+begin_src elisp :eval no
(add-to-list 'load-path "~/.emacs.d/org-markdown-preview/")
(require 'org-markdown-preview)
#+end_src

* Usage

~M-x org-markdown-preview-mode RET~

Run it in ~org-mode~ or ~markdown~ buffers.

In ~org-mode~ to see and write markdown result, you can use command:

~M-x org-markdown-preview-markdown-write~.

* Customization

*** ~org-markdown-preview-websocket-port~
Websocket port.
*** ~org-markdown-preview-browse-fn~
Function for browsing preview page. It will be called with one argument - url to open. Default value is to use xwidgets if available, othervise =browse-url=.
*** ~org-markdown-preview-refresh-delay~
How many seconds to wait after running hooks before refreshing content. If nil, refresh after imediatelly after running =org-markdown-preview-refresh-behavior=
*** ~org-markdown-preview-refresh-behavior~
When to refresh preview page. It should be a name of a hook (a symbol) where should refresh handler be added.
*** ~org-markdown-preview-pandoc-options~
Extra pandoc options.
*** ~org-markdown-preview-scroll-delay~
How many seconds to wait after last command before scroll sync. If nil, inhibit scroll sync at all.
*** ~org-markdown-preview-pandoc-output-type~
Markdown output type for =pandoc=.
* Screenshots
** Org-mode
[[./demo-org.png]]

** Markdown-mode
[[./demo-markdown.png]]

